# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'
- name: MajorMinorVersions
  value: '1.0'
- name: outputDirectory: 
  value: '$(build.binariesDirectory)/$(buildConfiguration)'
- name: isDevelop
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
- name: PatchNumber
  ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    value: 'PR'
  ${{ else }}:
    value: $[counter(variables['MajorMinorVersions'], 0)]
- name: NugetPackageVersion
  value: $[format('{0}.{1}', variables['MajorMinorVersions'], variables['PatchNumber'])]

name: $(NugetPackageVersion).$(Build.BuildId)

steps:
- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'deniszhukovski'
    scannerMode: 'MSBuild'
    projectKey: 'DenisZhukovski_MediaPrint'
    projectName: 'MediaPrint'
    extraProperties: |
        sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)\tests\MediaPrint.UnitTests\coverage.opencover.xml
        sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)\*.trx
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '**/*[Tt]est*/*.csproj'
    publishTestResults: true
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true "/p:CoverletOutputFormat=\"opencover,Cobertura\""'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage result'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '**/*.cobertura.xml'

- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
- task: GitHubRelease@1
  displayName: 'GitHub release (create)'
  condition: and(succeeded(), eq(variables.isDevelop, true))
  inputs:
    gitHubConnection: 'Github repositories'
    tagSource: userSpecifiedTag
    tag: '$(NugetPackageVersion)'